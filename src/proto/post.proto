syntax = "proto3";

service PostServices {
   rpc CreatePost(PostRequest) returns (PostResponse){};
   rpc GetAllPost(GetPostRequest) returns (GetPostResponse){};
   rpc PostLike(LikePost) returns (PostResponse){};
   rpc PostDisLike(LikePost) returns (PostResponse){};
   rpc PostComment(CommentPost) returns (PostResponse){};
   rpc DeleteComment(deleteComment) returns (PostResponse){};
   rpc ReportPost(reportPost) returns (PostResponse){};
   rpc GetReportedPost(Empty) returns (GetPostResponse){};
   rpc GetUserPost(UserId) returns (GetPostResponse){};
   rpc DeletePost(deleteComment) returns (PostResponse){};
   rpc EditPost(updatePostRequest) returns (PostResponse){};
   }

message Empty {

}

message FileDetails {
  string originalname = 1;
  string encoding = 2;
  string mimetype = 3;
  bytes buffer = 4; 
  int64 size = 5;
}

message PostRequest {
  string userId = 1;
  string description = 2;
  FileDetails image = 3;
}

message updatePostRequest {
  string postId = 1;
  string description = 2;
}

message PostResponse {
    bool success = 1;
}

message Comment {
    string userId = 1;
    string content = 2;
    string createdAt = 3;
    string _id = 4;
}

message Like {
    string userId = 1;
    string createdAt = 2;
}

message report {
  string userId = 1;
  string reason = 2;
}

message PostDetails {
  string _id = 1;
  string userId = 2;
  string image = 3;
  string description = 4;
  repeated Comment comments = 5;
  repeated Like likes = 6;
  string createdAt = 7;
  repeated report reported = 8;
}

message GetPostResponse {
  repeated PostDetails posts = 1;
}

message GetPostRequest {
  string limit = 1;
  string page = 2;
}

message LikePost {
  string userId = 1;
  string postId = 2;
}

message CommentPost {
  string userId = 1;
  string postId = 2;
  string comment = 3;
}

message deleteComment {
  string postId = 1;
  string commentId = 2;
}

message reportPost {
  string postId = 1;
  string userId = 2;
  string reason = 3;
}

message UserId {
  string userId = 1;
}

